Project Black Neutron Star, Sub-Project Protostar, notes regarding For-loops.

For loops are code blocks that run multiple times.

For loops have three things at least:
   •  Initialising value
   •  A check to see if initialised value has reached final value
   •  Changing the iterator

E.g. if I want to iterate a code block 10 times, all I have to do is:
   • Create a value and initialise it
   • See if the initialised value has reached 10 [its final value]
   • Increment the iterator by 1

The for loops will look like this:

int i;

for(i = 0; i < 10; i++) {
   printf("%d\n", i);
}

0 - 9 are printed, 10 numbers in total.

If I wish to iterate over an array, I use the iterator value as an index for the array, for example:

int array[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
int sum = 0;
int i;

for (i = 0; i < 10; i++) {
   sum += array[i];
}

printf("Sum of array is %d\n", sum);

Three things are declared, an integer array with 10 elements, an integer named sum equated to 0 and an
initialised integer called i. A for loop is then created, going from 0 - 9 inclusive, and iterating after
each run through of the block is successful. The code block adds the value at the index array[i] to sum, and
once the whole for loop is done, print statement.

In the for loop tutorial on learn-c.org, there's an exercise where I'm told to calculate the factorial of 
an array, most of the code is already done, but the meat of the question is the for loop, here it is.

#include <stdio.h>

int main() {
  int array[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
  int factorial = 1;
  int i;

  /* calculate the factorial using a for loop  here*/
    for (i = 0; i < 10; i++) {
        factorial *= array[i];
    }

  printf("10! is %d.\n", factorial);

The for loop multiples each element by int factorial and saves it to factorial i.e.
1 * array[0]
array[0] * array[1]
array[1] * array[2]
array[2] * array[3]

So on and so forth.